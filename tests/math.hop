fn main {
    plus
    minus
    times
    div
    power
}

fn aeq float float -> bool {
    - abs 0.0001 <
}

fn abs float -> float {
    if . 0.0 < {
        neg
    }
}

fn plus {
    1 1 + 2 == assert
    1.4 0.2 + 1.6 aeq assert
    255 to_byte 1 to_byte + 0 to_byte == assert

    1 1.0 + 2.0 aeq assert
    1 to_byte 1.0 + 2.0 aeq assert
    1 to_byte 1 + 2 == assert
}

fn minus {
    1 5 - -4 == assert
    1.2 0.2 - 1.0 aeq assert
    1 to_byte 2 to_byte - 255 to_byte == assert
}

fn times {
    4 5 * 20 == assert
    -4.2 8.95 * -37.59 aeq assert
    86 to_byte 3 to_byte * 2 to_byte == assert
}

fn div {
    21 4 / 5 == assert
    52.4 13.1 / 4.0 aeq assert
    86 to_byte 2 to_byte / 43 to_byte == assert
}

fn power {
    2.0 3.0 pow 8.0 aeq assert
    -1.0 2.0 pow 1.0 aeq assert
    2.0 0.5 pow 1.4142135623730951 aeq assert
}
